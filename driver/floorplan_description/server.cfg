
# To test this driver, please execute the test client in $DONNIE_PATH/test/sox
# floorplan generates a text, which is sent to gtts, and finally to the audio player
driver
(
	name "floorplan_description"
	plugin "libfloorplan_description"
	provides ["log:0"]  # selected to reuse a message player_ranger_power_config of type uint8_t
	requires ["speech:0"]  # textual output with description
	
	description "meu quartinho"
	debug 1
)


driver
(
	name "gtts"
	plugin "libgtts"
	requires ["sound:0"]
	provides ["speech:0"]
	debug 1
)


driver
(
	name "soxplayer"
	plugin "libsoxplayer"
	provides ["sound:0"]
)




#description {
# * @brief Speech synthesis
#
#The @p speech interface provides access to a speech synthesis system.
#}
#
#/** Command subtype: say a string */
#message { CMD, SAY, 1, player_speech_cmd_t };
#
#/** @brief Command: say a string (@ref PLAYER_SPEECH_CMD_SAY)
#
#The @p speech interface accepts a command that is a string to
#be given to the speech synthesizer.*/
#typedef struct player_speech_cmd
#{
#  /** Length of string */
#  uint32_t string_count;
#  /** The string to say */
#  char *string;
#} player_speech_cmd_t;

#############

#typedef struct player_ranger_power_config
#{
#  /** TRUE to turn data on, FALSE to turn data off. */
#  uint8_t state;
#} player_ranger_power_config_t;
