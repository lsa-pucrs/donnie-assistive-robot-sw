#!/bin/bash
#####################
# Author: Alexandre Amory
# Date: October/2016, Decemeber/2016
# Laboratorio de Sistemas Autonomos - FACIN - PUCRS University
# Description:
#   This is a setup script for Donnie`s desktop computer. 
#   Make sure this file is executed in your ~/.bashrc file
# How to Execute:

# Donnie user environment variables
# donnie instalation dir
export DONNIE_PATH="@DONNIE_PATH@"
# donnie source dir
export DONNIE_SOURCE_PATH="@DONNIE_SOURCE_PATH@"
# dir used to run Donnie
export DONNIE_EXEC_PATH="${DONNIE_PATH}/test/stage"
# donnie IP address. Use localhost for simulation mode. When the robot 
# is used, this variable should have the robot`s IP address
export DONNIE_IP=localhost
export DONNIE_PORT=6665
# donnie language, default from system
export DONNIE_LANG="$LANGUAGE"

#required to run donnie
export PATH=${PATH}:${DONNIE_PATH}/bin
export LD_LIBRARY_PATH=/usr/lib:/usr/local/lib/:${LD_LIBRARY_PATH}
# Opencv lib path
export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/:${LD_LIBRARY_PATH}
# Player lib path
export LD_LIBRARY_PATH=/usr/local/lib64/:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH=${DONNIE_PATH}/lib/player:${LD_LIBRARY_PATH}

# required to compile donnie 
# run 'sudo find / -name "*.pc" -type f' to find all the pc files for pkg-config
# run 'sudo find / -name "*.cmake" -type f' to find all the cmake files for cmake
VER=$(lsb_release -sr)
case "${VER}" in 
	14.04)	
		export CMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}:/usr/share/cmake-2.8/Modules/:/usr/share/cmake-2.8/Modules/Platform/:/usr/share/cmake-2.8/Modules/Compiler/:/usr/local/share/cmake/Modules:/usr/local/lib64/cmake/Stage/:/usr/lib/fltk/:/usr/share/OpenCV/
		;;
	16.04)
		export CMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}:/usr/share/cmake-3.5/Modules/:/usr/share/cmake-3.5/Modules/Platform/:/usr/share/cmake-3.5/Modules/Compiler/:/usr/local/share/cmake/Modules:/usr/local/lib/cmake/Stage/:/usr/lib/fltk/:/usr/share/OpenCV/
		;;
esac
export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig/:/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig/:/usr/share/pkgconfig/:${PKG_CONFIG_PATH}

# Donnie developer environment variables - just only is you are using cross compiling
#export RPI_ROOT_PATH=/opt/raspberrypi/root
#export RPI_TOOLS_PATH=/opt/raspberrypi/tools

alias ssh_donnie='ssh -X pi@${DONNIE_IP}'

function donnie_check_var {
	if [ -z "$DONNIE_LANG" ]; then
		echo -e "${RED}ERROR:${NC} Need to set DONNIE_LANG environment variable\n"
		echo -e "Example: export DONNIE_LANG=pt_BR\n"
		exit 1
	fi
	if [ "$DONNIE_LANG" = "en_US" ]; then
		donnie_check_var_en
	fi
	if [ "$DONNIE_LANG" = "pt_BR" ]; then
		donnie_check_var_pt
	fi
}

function donnie_check_var_en {
	if [ -z "$DONNIE_PATH" ]; then
		echo -e "${RED}ERROR:${NC} Need to set DONNIE_PATH environment variable\n"
		echo -e "Example: export DONNIE_PATH=/opt/donnie\n"
		exit 1
	fi  
	if [ -z "$DONNIE_SOURCE_PATH" ]; then
		echo -e "${RED}ERROR:${NC} Need to set DONNIE_SOURCE_PATH environment variable\n"
		echo -e "Example: export DONNIE_SOURCE_PATH=~/donnie/donnie-assistive-robot-sw\n"
		exit 1
	fi  	
}

function donnie_check_var_pt {
	if [ -z "$DONNIE_PATH" ]; then
		echo -e "${RED}ERRO:${NC} É necessário configurar a variável de ambiente DONNIE_PATH\n"
		echo -e "Examplo: export DONNIE_PATH=/opt/donnie\n"
		exit 1
	fi  
	if [ -z "$DONNIE_SOURCE_PATH" ]; then
		echo -e "${RED}ERRO:${NC} É necessário configurar a variável de ambiente DONNIE_SOURCE_PATH\n"
		echo -e "Examplo: export DONNIE_SOURCE_PATH=~/donnie/donnie-assistive-robot-sw\n"
		exit 1
	fi  	
}

function donnie_login {
	ssh_donnie
}

#function donnie_mount {
#	sudo sshfs pi@$DONNIE_IP:/ $RPI_ROOT_PATH -o transform_symlinks -o allow_other
#}

#function donnie_umount {
#	sudo umount $RPI_ROOT_PATH
#}

function donnie_desktop_update {
	donnie_check_var
	if [ "$DONNIE_LANG" = "en_US" ]; then
		donnie_desktop_update_en
	fi
	if [ "$DONNIE_LANG" = "pt_BR" ]; then
		donnie_desktop_update_pt
	fi
}

function donnie_desktop_update_en {
	echo "Updating donnie in directory ${DONNIE_SOURCE_PATH}"
    cd "${DONNIE_SOURCE_PATH}/build"
	git pull origin devel
	cmake ..
	make -j 8
	sudo make install
	cd -
	echo "Update complete"
}

function donnie_desktop_update_pt {
	echo "Atualizando o Donnie no diretório ${DONNIE_SOURCE_PATH}"
    cd "${DONNIE_SOURCE_PATH}/build"
	git pull origin devel
	cmake ..
	make -j 8
	sudo make install
	cd -
	echo "Atualização concluída"
}

function donnie_player(){
	donnie_check_var
	if [ "$DONNIE_LANG" = "en_US" ]; then
		donnie_player_en
	fi
	if [ "$DONNIE_LANG" = "pt_BR" ]; then
		donnie_player_pt
	fi
}

function donnie_player_en(){
  echo "Running Donnie software in directory ${DONNIE_EXEC_PATH}"
  #nohup player ${DONNIE_EXEC_PATH}/server_donnie.cfg &> /dev/null &
  
  #Parse options
  if [ "$1" = "-nogui" ] 
  then
    xterm -e "player ${DONNIE_EXEC_PATH}/server_donnie_nogui.cfg &> /dev/null" &
	sleep 5
	xterm -e "${DONNIE_PATH}/bin/alerts  &> /dev/null" &
	sleep 3
	echo "Running Donnie ..."
  elif [ "$1" = "--help" ] || [ "$1" = "-h" ] 
  then
	echo "Donnie Player launcher"
	echo "USAGE:  donnie_player [options]"
	echo -e "\nWhere [options] can be:"
	echo "  -h, --help         : print this message."
	echo "  --nogui            : launch player without the graphical interface."
	#echo "  -c                : acess launch config."
  else  #default
	xterm -e "player ${DONNIE_EXEC_PATH}/server_donnie.cfg &> /dev/null" &
	sleep 5
	xterm -e "${DONNIE_PATH}/bin/alerts  &> /dev/null" &
	sleep 3
	echo "Running Donnie ..."
  fi
}

function donnie_player_pt(){
  echo "Executando software Donnie no diretório ${DONNIE_EXEC_PATH}"
  #nohup player ${DONNIE_EXEC_PATH}/server_donnie.cfg &> /dev/null &
  
  #Parse options
  if [ "$1" = "-nogui" ] 
  then
    xterm -e "player ${DONNIE_EXEC_PATH}/server_donnie_nogui.cfg &> /dev/null" &
	sleep 5
	xterm -e "${DONNIE_PATH}/bin/alerts  &> /dev/null" &
	sleep 3
	echo "Donnie executando ..."
  elif [ "$1" = "--help" ] || [ "$1" = "-h" ] 
  then
	echo "Lançador Donnie Player"
	echo "USAGEM:  donnie_player [opções]"
	echo -e "\nOnde [opções] pode ser:"
	echo "  -h, --help         : imprime esta mensagem."
	echo "  --nogui            : lança player sem a interface gráfica."
	#echo "  -c                : acess launch config."
  else  #default
	xterm -e "player ${DONNIE_EXEC_PATH}/server_donnie.cfg &> /dev/null" &
	sleep 5
	xterm -e "${DONNIE_PATH}/bin/alerts  &> /dev/null" &
	sleep 3
	echo "Donnie executando ..."
  fi
}

function donnie_kill(){
	killall player
	if [ -z "$DONNIE_LANG" ]; then
		echo -e "${RED}ERROR:${NC} Need to set DONNIE_LANG environment variable\n"
		echo -e "Example: export DONNIE_LANG=pt_BR\n"
	fi
	if [ "$DONNIE_LANG" = "en_US" ]; then
		echo "Closing donnie..."
	fi
	if [ "$DONNIE_LANG" = "pt_BR" ]; then
		echo "Fechando donnie..."
	fi
}

function donnie_robot_update {
	echo "TO BE DONE !!!"
}
